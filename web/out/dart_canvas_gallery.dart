// Auto-generated from dart_canvas_gallery.html.
// DO NOT EDIT.

library dart_canvas_gallery;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import "dart:html";
import "dart:math";
import "package:web_ui/web_ui.dart";
import 'package:game_loop/game_loop_html.dart';
part '../gallery_element.dart';
part '../analog_clock.dart';
part '../rings.dart';
part '../gallery.dart';
part '../spinning_square.dart';


// Original code


Gallery gallery;
List<String> galleryItems;

Random rng = new Random();

void main() {
  gallery = new Gallery();
  galleryItems = toObservable(new List<String>());
  gallery.elements.keys.forEach((i) => galleryItems.add(i));

  gallery.swapTo("Rings");
}
// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<li template="" repeat="item in galleryItems"></li>'), __html1 = new autogenerated.CanvasElement();
  var __e2, __e4;
  var __t = new autogenerated.Template(__root);
  __e2 = __root.nodes[1].nodes[1];
  __t.loop(__e2, () => galleryItems, ($list, $index, __t) {
    var item = $list[$index];
    var __e1;
    __e1 = __html0.clone(true);
    var __binding0 = __t.contentBind(() => item, false);
    __e1.nodes.addAll([new autogenerated.Text('\n        '),
        __binding0,
        new autogenerated.Text('\n      ')]);
    __t.listen(__e1.onClick, ($event) { gallery.swapTo(item); });
  __t.add(__e1);
  });
  __e4 = __root.nodes[5];
  __t.loop(__e4, () => galleryItems, ($list, $index, __t) {
    var item = $list[$index];
    var __e3;
    __e3 = __html1.clone(true);
    __t.oneWayBind(() => item, (e) { if (__e3.id != e) __e3.id = e; }, false, false);
  __t.addAll([new autogenerated.Text('\n      '),
      __e3,
      new autogenerated.Text('\n    ')]);
  });
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=dart_canvas_gallery.dart.map